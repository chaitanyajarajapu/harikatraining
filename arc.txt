azdata arc dc create --profile-name azure-arc-kubeadm --namespace arc --name arc --subscription b05abdce-7d8b-4766-930b-fce27e172988 --resource-group azurearcrg --location eastus --connectivity-mode indirect

azdata arc sql mi create -n sqldemo --storage-class-data thin-disk --storage-class-logs thin-disk
azdata arc sql mi create -n sqldemo

azdata arc sql mi list
azdata arc sql mi show -n sqldemo

kubectl logs sqldemo-0 -c arc-sqlmi -n arc
kubectl get pods sqldemo-0 -o jsonpath='{.spec.containers[*].name}' -n arc
kubectl exec -it --namespace=arc sqldemo-0 -c arc-sqlmi -- bash -c "cat /var/opt/mssql/log/errorlog"
kubectl exec -it --namespace=arc sqldemo-0 -c arc-sqlmi -- bash -c "ls /var/opt/mssql/data/"


azdata arc postgres server create -n pg1
azdata arc postgres server list
azdata arc postgres endpoint list -n <server group name>
kubectl logs sgn-0 -c postgres -n arc


azdata arc postgres server delete -n postgres

kubetl scale statefulsets --replicas=3

Create a database
CREATE DATABASE testDB;
USE testDB
CREATE TABLE Students( Studentid int IDENTITY(1,1) NOT NULL, Firstname varchar (200) , Lastname varchar (200) , Email varchar (100) )
SET IDENTITY_INSERT students ON
Insert into Students(Studentid,Firstname,lastname, email) Values(1,'Chaitanya','Jarajapu', 'chaitanya@happyhome.com')


kubetl scale statefulsets --replicas=3

select @@SERVERNAME  to check the pod which is serving the data



To get containers within a pod
kubectl get pods sqldemo123-0 -n arc -o jsonpath='{.spec.containers[*].name}*

to exec into pod
kubectl exec sqldemo-0 -c arc-sqlmi -it /bin/bash -n arc

cd /var/opt/mssql/data/



az login
az ad sp create-for-rbac --name arcadmin
az provider show -n Microsoft.AzureArcData -o table
az provider register -n Microsoft.AzureArcData --wait
az ad sp create-for-rbac --name azurearcadmin

{
  "appId": "f97ddd44-6420-4dac-900d-3cadc66dd1cb",
  "displayName": "azurearcadmin1",
  "name": "http://azurearcadmin1",
  "password": "Ln1ZGqod2vK1~S2hqr14XUefJZkQlLcNM6",
  "tenant": "0c9ce67c-d73a-4c85-840a-b508e7bfd723"

az role assignment create --assignee f97ddd44-6420-4dac-900d-3cadc66dd1cb --role 'Monitoring Metrics Publisher' --scope subscriptions/b05abdce-7d8b-4766-930b-fce27e172988
az role assignment create --assignee f97ddd44-6420-4dac-900d-3cadc66dd1cb --role 'Contributor' --scope subscriptions/b05abdce-7d8b-4766-930b-fce27e172988

SET SPN_CLIENT_ID=f97ddd44-6420-4dac-900d-3cadc66dd1cb
SET SPN_CLIENT_SECRET=Ln1ZGqod2vK1~S2hqr14XUefJZkQlLcNM6
SET SPN_TENANT_ID=0c9ce67c-d73a-4c85-840a-b508e7bfd723

$Env:SPN_CLIENT_ID="f97ddd44-6420-4dac-900d-3cadc66dd1cb"
$Env:SPN_CLIENT_SECRET="Ln1ZGqod2vK1~S2hqr14XUefJZkQlLcNM6"
$Env:SPN_TENANT_ID="0c9ce67c-d73a-4c85-840a-b508e7bfd723"

Executing: azdata arc dc create --connectivity-mode Indirect -n arc-dcr -ns arc2 -s b05abdce-7d8b-4766-930b-fce27e172988 -g azurearcrg -l eastus -sc fast --profile-name azure-arc-kubeadm


mkdir -p $HOME/.kube   
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config   
sudo chown $(id -u):$(id -g) $HOME/.kube/config


https://theithollow.com/2019/03/13/kubernetes-cloud-providers-and-storage-classes/


kubeadm token create --print-join-command
kubeadm join 10.0.2.25:6443 --token n0xivi.w3ir9ym0a8nsn4cq --discovery-token-ca-cert-hash sha256:0577f73f8c776df18f0920e5f49f5a3f0343ac1f6d495e50eff678376abe8d78
